fullnameOverride: ""
nameOverride: ""
featureFlags: {}
argoCDSupport: true
github:
  project: null
  owner: null
  prId: null
extensions:
  dbClient:
    enabled: false
    annotations: {}
    image:
      name: dbeaver/cloudbeaver
      tag: latest
    service:
      port: 8978
general:
  domain: REPLACE
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    labels: {}
    tls:
      name: null
      clusterIssuer: null
    paths:
      web:
        path: /(.*)
        pathType: ImplementationSpecific
      attachments:
        path: /attachments/(.*)
        pathType: ImplementationSpecific
      api:
        path: /api/(.*)
        pathType: ImplementationSpecific
      icons:
        path: /icons/(.*)
        pathType: ImplementationSpecific
      notifications:
        path: /notifications/(.*)
        pathType: ImplementationSpecific
      events:
        path: /events/(.*)
        pathType: ImplementationSpecific
      scim:
        path: /scim/(.*)
        pathType: ImplementationSpecific
      sso:
        path: /(sso/.*)
        pathType: ImplementationSpecific
      identity:
        path: /(identity/.*)
        pathType: ImplementationSpecific
      admin:
        path: /(admin/?.*)
        pathType: ImplementationSpecific
      keyConnector:
        path: /key-connector/(.*)
        pathType: ImplementationSpecific
      mssql:
        path: /(mssql/.*)
        pathType: ImplementationSpecific
  coreVersionOverride: ""
  webVersionOverride: ""
  disableUserRegistration: "false"
  admins: "false"
  email:
    replyToEmail: no-reply@bitwarden.localhost
    smtpHost: smtp.sendgrid.net
    smtpPort: "587"
    smtpSsl: "false"
  labels: {}
  volumeAccessMode: ReadWriteMany
  enableCloudCommunication: false
  cloudRegion: US
  cloudIdentityApiUri: https://identity.usdev.bitwarden.pw
  cloudApiUri: https://api.usdev.bitwarden.pw
  cloudPushRelayBaseUri: null
sharedStorageClassName: shared-storage
secrets:
  secretName: custom-secret
  secretProviderClass: null
  azureKeyVaultName: ephemeral-env-kv
component:
  admin:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/admin
      tag: dev
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  api:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/api
      tag: dev
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  attachments:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/attachments
      tag: dev
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  events:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/events
      tag: dev
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  icons:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/icons
      tag: dev
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  identity:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/identity
      tag: dev
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  keyConnector:
    enabled: false
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/key-connector
      tag: 2024.8.0
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
    config:
      databaseProvider: json
      rsaKeyProvider: certificate
      certificateProvider: filesystem
  notifications:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/notifications
      tag: dev
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  scim:
    annotations: {}
    enabled: false
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/scim
      tag: dev
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  sso:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/sso
      tag: dev
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
  web:
    annotations: {}
    labels: {}
    image:
      name: bitwardenprod.azurecr.io/web
      tag: dev
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
    deploymentStrategy: RollingUpdate
    securityContext: null
    podServiceAccount: null
supportComponents:
  dbMigrator:
    image:
      name: bitwardenprod.azurecr.io/mssqlmigratorutility
      tag: dev@sha256:942811560cfead755982621f8393a97fbadf99dd1156e52a957c5c5f165be78b
  certGenerator:
    image:
      name: docker.io/nginx
      tag: 1.25.3
  kubectl:
    image:
      name: bitnami/kubectl
      tag: 1.21
volume:
  dataprotection:
    size: 1Gi
    labels: {}
    annotations: {}
  attachments:
    size: 1Gi
    labels: {}
    annotations: {}
  licenses:
    size: 1Gi
    labels: {}
    annotations: {}
  logs:
    enabled: false
    size: 1Gi
    labels: {}
    annotations: {}
serviceAccount:
  name: service-account
  deployRolesOnly: false
database:
  enabled: true
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "0"
    argocd.argoproj.io/hook-delete-policy: HookFailed
  labels: {}
  image:
    name: mcr.microsoft.com/mssql/server
    tag: 2022-CU11-ubuntu-22.04
  resources:
    requests:
      memory: 2G
      cpu: 100m
    limits:
      memory: 2G
      cpu: 500m
  volume:
    backups:
      accessMode: ReadWriteOnce
      storageClass: managed
      size: 10Gi
      labels: {}
      annotations:
        argocd.argoproj.io/hook: PreSync
        argocd.argoproj.io/sync-wave: "0"
        argocd.argoproj.io/hook-delete-policy: HookFailed
    data:
      accessMode: ReadWriteOnce
      storageClass: managed
      size: 20Gi
      labels: {}
      annotations:
        argocd.argoproj.io/hook: PreSync
        argocd.argoproj.io/sync-wave: "0"
        argocd.argoproj.io/hook-delete-policy: HookFailed
    log:
      accessMode: ReadWriteOnce
      storageClass: managed
      size: 10Gi
      labels: {}
      annotations:
        argocd.argoproj.io/hook: PreSync
        argocd.argoproj.io/sync-wave: "0"
        argocd.argoproj.io/hook-delete-policy: HookFailed
  updateStrategy: OnDelete
  securityContext: null
  podServiceAccount: null
rawManifests:
  preInstall: []
  postInstall: []
